sequenz imc_logging "read_siplug_steady_state_fft started"

_text = "Display 3D FFT of Siplug in SteadyState?"
_erg = BoxNachricht("Info",_text,"?4")
wenn _erg = 1
	_file_search = "real_power_fft_Trend.csv"
	_file_search = "real_power_ald_Trend.csv"
	_pathname = "D:\Projekte\KKG_Valve3\Output\Features\"
	fft_file = _pathname + _file_search
	erg = FsFileExists(fft_file)
	MeasList = TxArrayCreate(0)
	wenn erg >= 1
		FftFileIst = fft_file
		;sequenz Read_Python_3dfft; -> Ax_Trend
	
		Ímportsvorlage = "#ImportAscii1.dll|ascii_python_siplug_fft"
		t0 = ZeitSystem?()
		Eventidx = leer;
		Eventdate = leer;
		_x = leer
		_groupart = 1;
		_fileid = FileOpenFAS(FftFileIst, Ímportsvorlage, 0); ascii_statusfile
		count = 0
		if txwo(fft_file, "fft_Trend")
			parname_trend = "SteadyState_FFT"
			yunit = "W"
		else
			parname_trend = "SteadyState_ALD"
			yunit = "W^2/Hz"
		ende
		wenn _fileid > 0
			_anzPar = FileObjNum?(_fileid)
			_index = 1
			for _index = 1 to _anzPar  step 2
				zeigen _index
				_typ = FileObjType?(_fileid,_index)
				wenn _typ = 1
					_Parname = FileObjName?(_fileid,_index)
					if txwo(_parname, "Deltaf") > 0
						count = count + 1
						_parx = FileObjRead(_fileid,_index)
						_Parname = FileObjName?(_fileid,_index+1)
						
						MeasList[count] = _Parname
						
						_pary = FileObjRead(_fileid,_index +1)
						{<_Parname>} = xy(_parx,_pary)
						seteinheit ({<_Parname>},"Hz",0)
						seteinheit ({<_Parname>},yunit,1)
									
						wenn count = 1				
							{<parname_trend>} = EventNew({<_Parname>},0)
						else
							EventAppend({<parname_trend>},{<_Parname>},0)
						ende					
						_eventnr = EventNum?({<parname_trend>})
						_Messdatum = _Parname
						_Sek_ = TTeil(_Messdatum,18,2)
						_Sek=TzuEW(_Sek_,"e")
						_Min_ = TTeil(_Messdatum,15,2)
						_Min=TzuEW(_Min_,"e")
						_Stun_ = TTeil(_Messdatum,12,2)
						_Stun=TzuEW(_Stun_,"e")
						_Tag_ = TTeil(_Messdatum,9,2)
						_Tag=TzuEW(_Tag_,"e")
						_Monat_ = TTeil(_Messdatum,6,2)
						_Monat=TzuEW(_Monat_,"e")
						_Jahr_ = TTeil(_Messdatum,1,4)
						_Jahr=TzuEW(_Jahr_,"e")
						_Messdatum_zahl=ZeitBinde(_Tag,_Monat,_Jahr,_Stun,_Min,_Sek)
										
						Ttrig = _Messdatum_zahl
										
						EventProp({<parname_trend>},_eventnr,0,Ttrig)
					ende
				
					;			ActEventDate = EventProp?({<parname_trend>},_index,0)
					;			Eventdate = binde(Eventdate,ganz(ActEventDate))
					;			_x = binde(_x,_index)
	
					entf _Parname
					entf {<_Parname>}
				ende
				;zeigen {<parname_trend>}
			ende
			
			Ax_Trend = {<parname_trend>}
			sequenz SortAndFilter3DFFT
			
			FileNameList_file = _pathname +"FileNameList_Spectrogram.txt"; 
			_fh = FileOpenASCII(FileNameList_file,2)
			_anz = TxArrayGetSize(MeasList)
			for _filei = 1 to _anz
				_err = FileLineWrite(_fh,MeasList[_filei],0)
			ende
			_err = FileClose(_fh)
			
			FileNameList_file = _pathname +"FileNameListSorted_Spectrogram.txt"; 
			_fh = FileOpenASCII(FileNameList_file,2)
			_anz = TxArrayGetSize(MeasListSorted)
			for _filei = 1 to _anz
				_err = FileLineWrite(_fh,MeasListSorted[_filei],0)
			ende
			_err = FileClose(_fh)

			
			if txwo(fft_file, "fft_Trend")
				A_fft_Trend = Ax_Trend
				CwLoadCCV("A_fft_Trend", "Siplug_A_fft_Trend.ccv")
			else
				A_ald_Trend = Ax_Trend
				CwLoadCCV("A_ald_Trend", "Siplug_A_ald_Trend.ccv")
			ende
			
			
			fileclose(_fileid)	
	
			t1 = ZeitSystem?()
			dt1 = t1-t0
			zeigen dt1
		ende
	ende
ende

