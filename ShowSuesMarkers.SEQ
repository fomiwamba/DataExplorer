sequenz imc_logging "show_sues_markers started"


Freqvec = leer
_index = PnTableGetSelectedRows("FrequencyParameters.FreqParameterListeGitter")
wenn _index > 0
	_Parname = SuesParListe[_index]
	;_Parname = PnGetItemText("VMS_Freq_Data.ParameterListe", _index)
	_parname_name_parts = txsplit(_Parname,"_")
	_parname_len = txarraygetsize(_parname_name_parts)
	Freqvec_ = tzuew(_parname_name_parts[_parname_len],"f")
	Freqvec = binde(Freqvec, Freqvec_/1000)
	
	if _parname_name_parts[1] = "psd" or _parname_name_parts[1] = "fft"
		_spec_par_name = _parname_name_parts[3]
	else
		_spec_par_name = _parname_name_parts[4]
	ende

	SpectrumPlot = "FrequencyParameters.FreqSpectrumPlot"
	SpecName = SpectrumPlot

	CwSelectMode("title")
	_erg = CwSelectWindow(SpecName)
	CwSelectByIndex("x-axis",1)
	_AxisScale = CwAxisGet("scale"); 4<-> Absolute Zeit oder 1<-> Linear
	_anz_markers = CwDisplayGet("marker.count")
	if _anz_markers > 0
		CwAction("delete.markers")
	end

	_ii = 1
	solange _ii <= 1
		;CwNewElement("marker")
		_anz_markers = CwDisplayGet("marker.count")
		CwNewElement("marker.vert.line")

		;CwNewElement("marker.harmonic.harmonic")
		CwSelectByIndex("marker", _anz_markers+1)
		CwMarkerSet("text",Freqvec[_ii])
		CwMarkerSet("x.type",1)
		CwMarkerSet("x",Freqvec[_ii])
		CwMarkerSet("y.type",2)
		CwMarkerSet("y",95)
		CwMarkerSet("arrow",0)
	
		;CwMarkerSet("dimline.distance",8)
		CwMarkerSet("extension",0)
		CwMarkerSet("font.size",6)
		CwMarkerSet("text.orientation",90)
		_fb = RGB( 255, 255, 0 ) ;Rot
		CwMarkerSet("color.background",_fb)
		_fb = RGB( 0, 0, 0) ;Blau
		CwMarkerSet("color.text",_fb)
		_ii = _ii +1
	ende
	
	
	PnSetValue("FrequencyParameters.FreqValue",Freqvec[1])

	if tverg("peak",_spec_par_name) <> 0
		_nlinien = SegLang?(Ax_Trend_Plot)
		_spalte_laenge = lang?(Ax_Trend_Plot)/_nlinien
		if isxy(Ax_Trend_Plot[1])
			_a = Ax_Trend_Plot[1]
			_b = _a.x
			_deltaf = _b[2]-_b[1]
			entf _a
			entf _b
		else
			_deltaf = xdel?(Ax_Trend_Plot[1])
		end
		
		
	
		FrequencyWindow_Hz = 0
		sequenz search_item Asset_Props:Name "FrequencyWindow_Hz"
		if search_index <>0
			FrequencyWindow_Hz = tzuew (Asset_Props:Val[search_index],"a")
		ende
		if FrequencyWindow_Hz < 0
			_freq_window = 2 * _deltaf
		else
			_freq_window = FrequencyWindow_Hz
		end
	
		_freqvalue = Freqvec[1]

		_spalte_counter = 1

		mag_freq_kask = leer
	
	
		_Fu =_Freqvalue - _freq_window
		_Fo = _Freqvalue + _freq_window
		_Fmax  = PnGetValue("FrequencyParameters.Freq_max")
		if _Fu < _Fmax and _Fo <= _Fmax
			solange _spalte_counter <= round(_spalte_laenge,1)
				_mag_spect = Ax_Trend_Plot[_spalte_counter];_Ax_trend[_spalte_counter];
			
				_Fu =_Freqvalue - _freq_window
				_Fo = _Freqvalue + _freq_window
				if isxy(_mag_spect)
					_Fu = posi(_mag_spect.x,_Fu)
					_Fo = posi(_mag_spect.x,_Fo)
				
					_mag_spect = grenindex(_mag_spect.y,_Fu,_Fo); Amplitudespektrum fuer X
				else
					_mag_spect = gren(_mag_spect,_Fu,_Fo); Amplitudespektrum fuer X
				end
	
				_mag_freq = 0
				wenn lang?(_mag_spect) < 1 
					_mag_freq = 0
				sonst
					_mag_freq = max(_mag_spect)
				ende
				mag_freq_kask = binde(mag_freq_kask,_mag_freq)
				_spalte_counter = _spalte_counter + 1
			ende
	
			;zeigen mag_freq_kask
			if 0
				_Parname_ext = _Parname + "_ext"
				if xaxis = 1
					{<_Parname_ext>} = xyvon(kmpx({<_Parname>}),mag_freq_kask)
				else
					{<_Parname_ext>} = mag_freq_kask
				end
				sequenz plot_2d_trend {<_Parname_ext>} xaxis "FrequencyParameters.FreqParameterPlot"
			end
		
		end
	end
ende




;a = 1
;zeigen a
;cwselectwindow(a)
;CwAction("win.close")

