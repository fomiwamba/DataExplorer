; sequenz create_sues_report
sequenz imc_logging "create_feature_report started"
;entf *
export_mode = "png";"pdf"

inputfile = "C:\BDA\ExpertAnalysis\CreateReport.txt"
idDatei= FileOpenASCII(inputfile,0 )
TxZeile = ""
ok = 0
count = 0
solange ok = 0
	ok = FileLineRead( idDatei, TxZeile, 0 )
	if ok = 0 
		if count = 0
			AssetFolder = TxZeile
		ende
		if count = 1
			Channels = TxZeile
		ende
		count = count + 1
	ende
ende
FileClose(idDatei)


if 1; folder where the report templates are
	cadis_report_folder = "C:\BDA\ReportTemplates\"
else
	cadis_report_folder = assetfolder + "\reports\"
ende

if 0
	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	; Load FeatureTable_Clean.csv
	;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	featuretable_file = assetfolder + "\" + "Output\Features\" + "FeatureTable_Clean.csv"
	; channel_time_series_parameters
	file = featuretable_file

	; search for measfiles
	_fileid = FileOpenXLS(file,0)
	wenn _fileid > 0
		FileXLSSelectSheet(_fileid,1)
		Measfiles = TxArrayCreate(1)
		_ii = 1
		SOLANGE _ii <=  2560
			_PName = FileXLSCellRead(_fileid,_ii,1,0)
			wenn tverg(_Pname,"FileId") = 0
				col_ist = _ii
				break
			sonst
				_ii = _ii + 1
			ende
		ENDE
		_ii = 1
		SOLANGE _ii <=  2^32
			_PName = FileXLSCellRead(_fileid,col_ist,_ii+1,0)
			wenn tverg(_Pname,"") = 0
				break
			sonst
				Measfiles[_ii] = _PName
				last = _ii
				_ii = _ii + 1
			ende
		ENDE
		; return Measfiles
		err = FileClose(_fileid)
	ende

	date_time_lastfile = Measfiles [last]
	if txwo(date_time_lastfile,"L") = 1
		date_time_lastfile = tteil(date_time_lastfile,2,tlang(date_time_lastfile))
	ende
	if 1
		date_time_str = date_time_lastfile
	else
		date_time_str = zeitintext(zeitsystem?(),3)
		date_time_str = tteil(date_time_str,7,4)+ tteil(date_time_str,4,2)+ tteil(date_time_str,1,2)+"_"+ tteil(date_time_str,12,2)+ tteil(date_time_str,15,2)+ tteil(date_time_str,18,2)
	end
end

;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
; Load ChannelFeatureStatusTable.csv
;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
file = assetfolder + "\" + "Output\Features\" + "ChannelFeatureStatusTable.csv"; -> 1st colummn --> parameters, 1st row --> channels, max Status
file = assetfolder + "\" + "Output\Features\" + "current_parameter_table_status.csv"; -> 1st colummn --> parameters, 1st row --> channels, Current Status
if fsfileexists(file)
	_fileid = FileOpenXLS(file,0)
	wenn _fileid > 0
		; parameter_liste = FileXLSColumnRead(_fileid,1,2,32,0)
		FileXLSSelectSheet(_fileid,1)
		ChFeatParListe = TxArrayCreate(1)
		ChListe = TxArrayCreate(1)
		ChFeatStatusData_ = GrNeu()
		
		_ii = 1
		SOLANGE _ii <=  2560
			_PName = FileXLSCellRead(_fileid,1,_ii+1,0)
			wenn tverg(_Pname,"") = 0
				break
			sonst
				ChFeatParListe[_ii] = _PName
				_ii = _ii + 1
			ende
		ENDE
		_iimax = _ii -1 
		
		_jj = 1
		SOLANGE _jj <=  2560
			_PName = FileXLSCellRead(_fileid,_jj,1,0)
			wenn tverg(_Pname,"") = 0
				break
			sonst
				
				if _jj > 1
					ChListe[_jj-1] = _PName
					ChFeatStatusData_:{<_PName>} = FileXLSColumnRead(_fileid,_jj,2,_iimax,0)
				end
				_jj = _jj + 1
			ende
		ENDE
		err = FileClose(_fileid)

	ende
ende
entf file

table_rows_soll = txarraygetsize(ChListe)
table_name = "SuesStatusTable"
table_rows_per_page = 65;RgTableColumns?(table_name)
number_pages = floor(table_rows_soll / table_rows_per_page) + 1

for page = 1  to number_pages
	cadis_report_channel_feature_status = cadis_report_folder + "cadis_report_channel_feature_status.drb"
	err = RgDocOpen( cadis_report_channel_feature_status, 0)
	wenn err = 0
		if varexist?("ChFeatParListe") and varexist?("ChListe") and varexist?("ChFeatStatusData_") 
			;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
			RgTextSet("freq_par_page", tform(page,"f1.0"),0)
			table_name = "SuesStatusTable"
			table_cols = RgTableColumns?(table_name)
			table_rows = RgTableRows?(table_name)
			
			
			if page = 1
				_ii_min = 1
				_ii_max = table_rows_per_page 
			else
				_ii_min = _ii_max +1
				_ii_max = _ii_min + table_rows_per_page -1
			end
			if _ii_max > table_rows_soll
				_ii_max = table_rows_soll
			end
			;zeigen _ii_min
			;zeigen _ii_max

			for _ii =_ii_min to _ii_max+1; txarraygetsize(ChFeatParListe)+1
				
				if _ii = _ii_min					
					RgTableSetCell(table_name,1,1,"ChId",0)
					
					for _kkkk = 1 to txarraygetsize(ChFeatParListe) 
						RgTableSetCell(table_name,1+_kkkk ,1,ChFeatParListe[_kkkk],0)
					ende				
				else
					_chname = ChListe[_ii-1]	
					RgTableSetCell(table_name,1,_ii - _ii_min + 1,_chname,0)
					if 0; ChannelStatus darstellen
						_chdata = ChFeatStatusData_:{<_chname>}
						_parstatus = max(_chdata)
						sequenz find_status_colour; -> _parstatus_color
						RgObjSetColor(table_name,1,_parstatus_color,1 ,_ii - _ii_min + 1)
					end
					
					for _kkkk = 1 to txarraygetsize(ChFeatParListe)
						_parstatus = ChFeatStatusData_:{<_chname>}[_kkkk]
						RgTableSetCell(table_name,1+_kkkk ,_ii - _ii_min + 1,tform(_parstatus,"f1.0"),0)	
						sequenz find_status_colour; -> _parstatus_color
						RgObjSetColor(table_name,1,_parstatus_color,_kkkk+1 ,_ii - _ii_min + 1)
					end	
				end
			ende
		ende
	end
		
	if page = 1
		err =  RgDocSave(cadis_report_channel_feature_status, 0 )
	end
		
	if page = number_pages
		_ii_max_ = table_rows_per_page * number_pages 
		for _ii = _ii_max+1  to _ii_max_
			for _jj = 1 to table_cols
				RgTableSetCell(table_name,_jj,_ii - _ii_min + 2,"",0)
				_parstatus_color = RGB(255, 255, 255)
				RgObjSetColor(table_name,1,_parstatus_color,_jj,_ii - _ii_min + 2)		
			ende
		ende
	end
		
	report_name = "channel_feature_status_page_" + tform(page,"f1.0")
	sequenz export_report report_name
	; close report
	err =  RgDocClose( 1 )
ende


	